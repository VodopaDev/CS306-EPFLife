apply plugin: 'com.android.application'
apply plugin: 'jacoco'


jacoco {
    toolVersion = "0.8.0"
}

android {
    compileSdkVersion 28
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "ch.epfl.sweng.zuluzulu"
        minSdkVersion 15
        multiDexEnabled true
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        targetCompatibility '1.8'
        sourceCompatibility '1.8'
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.23.0'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'

    //noinspection GradleCompatible
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.2'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.2'


    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support.test.espresso:espresso-idling-resource:3.0.2'

    // ???
    implementation 'com.google.code.gson:gson:2.8.2'
    //used to put manipulate ImageView
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    //needed for other google services
    implementation 'com.google.firebase:firebase-core:16.0.4'
    //real-time database
    implementation 'com.google.firebase:firebase-firestore:17.1.1'
    //hosted storage
    implementation 'com.google.firebase:firebase-storage:16.0.3'
    // ???
    implementation 'com.jayway.android.robotium:robotium-solo:5.2.1'
    // Used for the calendar view
    implementation 'com.github.npanigrahy:Custom-Calendar-View:v1.0'
    //Used for google map integration
    implementation 'com.google.android.gms:play-services-maps:15.0.0'
    implementation 'com.google.android.gms:play-services-auth:15.0.0'
    implementation 'com.google.android.gms:play-services-location:15.0.0'
    //implementation 'com.google.android.gms:play-services:15.0.0'
    implementation 'com.google.android.gms:play-services-ads:15.0.0'
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}

repositories {
    google()
    jcenter()
    maven { url "https://jitpack.io" }
}

apply plugin: 'com.google.gms.google-services'
